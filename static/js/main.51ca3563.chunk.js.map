{"version":3,"sources":["ui/Players/AddPlayerForm/AddPlayerForm.module.scss","ui/Table/Match/Match.module.scss","redux/playersReducer.js","redux/tableReducer.js","redux/store.js","ui/Players/Player/Player.jsx","utils/validators/validators.js","ui/common/FormControls/FormsControls.jsx","ui/Players/AddPlayerForm/AddPlayerForm.jsx","ui/common/Filter/Filter.jsx","ui/Players/Players.jsx","ui/Table/Match/MatchResults/MatchResults.jsx","ui/Table/Match/Match.jsx","ui/Table/Table.jsx","App.jsx","serviceWorker.js","index.js","ui/Table/Match/MatchResults/MatchResults.module.scss","ui/Players/Players.module.scss","ui/Table/Table.module.scss","ui/common/Filter/Filter.module.scss","App.module.scss","ui/common/FormControls/FormsControls.module.scss"],"names":["module","exports","ADD_PLAYER","SELECT_PLAYER","ADD_PLAYER_TO_SELECTION","REMOVE_PLAYER_FROM_SELECTION","APPLY_FINAL_RATING","initialState","players","id","name","rating","selected","selectedPlayers","playersReducer","state","action","type","newPlayer","map","player","filter","inc","increment","find","FORM_TABLE","ADD_QUARTERFINALS_RESULT","ADD_SEMIFINALS_RESULT","FILL_QUARTERFINALS_SCORE","FILL_SEMIFINALS_SCORE","FILL_FINALS_SCORE","CHANGE_RATING","isTableFormed","matchesQuarterfinals","firstPlayer","secondPlayer","firstPlayerScore","secondPlayerScore","matchesSemifinals","matchesFinals","ratingIncrement","tableReducer","selectedIds","match","position","id1","id2","CLEAR_FORM","reducers","combineReducers","table","form","formReducer","plugin","addPlayer","matchResults","clearForm","store","createStore","Player","React","memo","props","requiredField","value","numberField","length","stringField30","FormControl","input","meta","hasError","error","touched","classForError","styles","className","formControl","children","FormControlComponent","restProps","child","Control","AddPlayerForm","onSubmit","handleSubmit","style","formContainer","Field","component","placeholder","validate","variant","onClick","toggleAddPlayerForm","AddPlayerReduxForm","reduxForm","AddPlayerFormContainer","FormData","Math","random","toFixed","Filter","filterContainer","filterValue","onChange","changeFilter","clearFilter","filterButton","Players","playersElements","PlayersContainer","useState","isFormDisplayed","toggleFormDisplay","changeFilterValue","show","setShow","tooltipText","changeTooltipText","target","useRef","useEffect","toLowerCase","includes","sort","player1","player2","classForSelected","Item","key","removePlayerFromSelection","togglePlayerSelection","addPlayerToSelection","playersContainer","title","event","currentTarget","ref","playersForTable","forEach","push","formTable","removeAllPlayersFromSelection","current","placement","onEntered","setTimeout","ComposedPlayers","compose","connect","MatchResults","score","buttons","closeForm","tooltip","MatchResultsReduxForm","MatchResultsContainer","formData","winner","firstPlayerIncrement","secondPlayerIncrement","ceil","changeRating","addQuarterfinalsResult","fillQuarterfinalsScore","addSemifinalsResult","fillSemifinalsScore","addFinalsResult","fillFinalsScore","applyFinalRating","Match","matchContainer","needToOpen","openForm","showResultsForm","isFormOpen","Table","tableContainer","ComposedTable","toggleResultForm","formIsOpenForId","changeId","matches","App","app","lg","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51ca3563.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"AddPlayerForm_formContainer__vRE6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"matchContainer\":\"Match_matchContainer__2QGpa\",\"match\":\"Match_match__3V5US\",\"player\":\"Match_player__3MOou\",\"name\":\"Match_name__1ms8P\",\"score\":\"Match_score__2nwvG\"};","const ADD_PLAYER = 'tournament-table/playersReducer/ADD_PLAYER';\r\nconst SELECT_PLAYER = 'tournament-table/playersReducer/SELECT_PLAYER';\r\nconst ADD_PLAYER_TO_SELECTION = 'tournament-table/playersReducer/ADD_PLAYER_TO_SELECTION';\r\nconst REMOVE_PLAYER_FROM_SELECTION = 'tournament-table/playersReducer/REMOVE_PLAYER_FROM_SELECTION';\r\nconst REMOVE_ALL_PLAYERS_FROM_SELECTION = 'tournament-table/playersReducer/REMOVE_ALL_PLAYERS_FROM_SELECTION';\r\nconst APPLY_FINAL_RATING = 'tournament-table/playersReducer/APPLY_FINAL_RATING';\r\n\r\nconst initialState = {\r\n    players: [\r\n        {id: 1, name: 'Raman Tamilin', rating: 100, selected: false},\r\n        {id: 2, name: 'Alina Dubenok', rating: 110, selected: false},\r\n        {id: 3, name: 'Avery Reid', rating: 120, selected: false},\r\n        {id: 4, name: 'Jamie Edwards', rating: 130, selected: false},\r\n        {id: 5, name: 'Kaia Leon', rating: 140, selected: false},\r\n        {id: 6, name: 'Jack Davies', rating: 150, selected: false},\r\n        {id: 7, name: 'Jude Law', rating: 160, selected: false},\r\n        {id: 8, name: 'Dale Cooper', rating: 170, selected: false},\r\n        {id: 9, name: 'Daniella Floyd', rating: 180, selected: false},\r\n        {id: 10, name: 'Jack Brady', rating: 190, selected: false}\r\n    ],\r\n    selectedPlayers: []\r\n}\r\n\r\nconst playersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: [...state.players, action.newPlayer]\r\n            }\r\n        case SELECT_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: state.players.map( player => {\r\n                    if (player.id === action.id) {\r\n                        return {\r\n                            ...player,\r\n                            selected: !player.selected\r\n                        }\r\n                    } else {\r\n                        return player\r\n                    }\r\n                })\r\n            }\r\n        case ADD_PLAYER_TO_SELECTION:\r\n            return {\r\n                ...state,\r\n                selectedPlayers: [...state.selectedPlayers, action.player]\r\n            }\r\n        case REMOVE_PLAYER_FROM_SELECTION:\r\n            return {\r\n                ...state,\r\n                selectedPlayers: state.selectedPlayers.filter( player => {\r\n                    return player.id !== action.player.id\r\n                })\r\n            }\r\n        case REMOVE_ALL_PLAYERS_FROM_SELECTION:\r\n            return {\r\n                ...state,\r\n                players: state.players.map( player => {\r\n                    return {\r\n                        ...player,\r\n                        selected: false\r\n                    }\r\n                }),\r\n                selectedPlayers: [],\r\n            }\r\n        case APPLY_FINAL_RATING:\r\n            return {\r\n                ...state,\r\n                players: state.players.map( player => {\r\n                    const inc = action.increment.find( inc => player.id === inc.id ) || {increment: 0};\r\n                    return {\r\n                        ...player,\r\n                        rating: player.rating + inc.increment\r\n                    }\r\n                })\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPlayer = (newPlayer) => ({ type: ADD_PLAYER, newPlayer });\r\nexport const togglePlayerSelection = (id) => ({ type: SELECT_PLAYER, id });\r\nexport const addPlayerToSelection = (player) => ({ type: ADD_PLAYER_TO_SELECTION, player });\r\nexport const removePlayerFromSelection = (player) => ({ type: REMOVE_PLAYER_FROM_SELECTION, player });\r\nexport const removeAllPlayersFromSelection = () => ({ type: REMOVE_ALL_PLAYERS_FROM_SELECTION });\r\nexport const applyFinalRating = (increment) => ({ type: APPLY_FINAL_RATING, increment });\r\n\r\nexport default playersReducer;","const FORM_TABLE = 'tournament-table/tableReducer/FORM_TABLE';\r\nconst ADD_QUARTERFINALS_RESULT = 'tournament-table/tableReducer/ADD_QUARTERFINALS_RESULT';\r\nconst ADD_SEMIFINALS_RESULT = 'tournament-table/tableReducer/ADD_SEMIFINALS_RESULT';\r\nconst ADD_FINALS_RESULT = 'tournament-table/tableReducer/ADD_FINALS_RESULT';\r\nconst FILL_QUARTERFINALS_SCORE = 'tournament-table/tableReducer/FILL_QUARTERFINALS_SCORE';\r\nconst FILL_SEMIFINALS_SCORE = 'tournament-table/tableReducer/FILL_SEMIFINALS_SCORE';\r\nconst FILL_FINALS_SCORE = 'tournament-table/tableReducer/FILL_FINALS_SCORE';\r\nconst CHANGE_RATING = 'tournament-table/tableReducer/CHANGE_RATING';\r\n\r\nconst initialState = {\r\n    isTableFormed: false,\r\n    matchesQuarterfinals: [\r\n        {id: 1, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0},\r\n        {id: 2, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0},\r\n        {id: 3, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0},\r\n        {id: 4, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0}\r\n    ],\r\n    matchesSemifinals: [\r\n        {id: 5, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0},\r\n        {id: 6, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0}\r\n    ],\r\n    matchesFinals: [\r\n        {id: 7, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n            firstPlayerScore: 0, secondPlayerScore: 0}\r\n    ],\r\n    ratingIncrement: [\r\n        {id: 1, increment: 0},\r\n        {id: 2, increment: 0},\r\n        {id: 3, increment: 0},\r\n        {id: 4, increment: 0},\r\n        {id: 5, increment: 0},\r\n        {id: 6, increment: 0},\r\n        {id: 7, increment: 0},\r\n        {id: 8, increment: 0},\r\n    ]\r\n}\r\n\r\nconst tableReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FORM_TABLE:\r\n            return {\r\n                ...state,\r\n                isTableFormed: true,\r\n                matchesQuarterfinals: [\r\n                    {id: 1, firstPlayer: action.players[0], secondPlayer: action.players[7],\r\n                        firstPlayerScore: 0, secondPlayerScore: 0},\r\n                    {id: 2, firstPlayer: action.players[3], secondPlayer: action.players[4],\r\n                        firstPlayerScore: 0, secondPlayerScore: 0},\r\n                    {id: 3, firstPlayer: action.players[2], secondPlayer: action.players[5],\r\n                        firstPlayerScore: 0, secondPlayerScore: 0},\r\n                    {id: 4, firstPlayer: action.players[1], secondPlayer: action.players[6],\r\n                        firstPlayerScore: 0, secondPlayerScore: 0}\r\n                ],\r\n                matchesSemifinals: [\r\n                    {id: 5, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n                        firstPlayerScore: 0, secondPlayerScore: 0},\r\n                    {id: 6, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n                        firstPlayerScore: 0, secondPlayerScore: 0}\r\n                ],\r\n                matchesFinals: [\r\n                    {id: 7, firstPlayer: {name: 'TBA'}, secondPlayer: {name: 'TBA'},\r\n                        firstPlayerScore: 0, secondPlayerScore: 0}\r\n                ],\r\n                ratingIncrement: action.selectedIds\r\n            }\r\n        case ADD_QUARTERFINALS_RESULT:\r\n            return {\r\n                ...state,\r\n                matchesSemifinals: state.matchesSemifinals.map( match => {\r\n                    if (match.id === 5 && (action.id === 1 || action.id === 2)) {\r\n                        if (action.position === 'top') {\r\n                            return {\r\n                                ...match,\r\n                                firstPlayer: {...action.player}\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...match,\r\n                                secondPlayer: {...action.player}\r\n                            }\r\n                        };\r\n                    }\r\n                    if (match.id === 6 && (action.id === 3 || action.id === 4)) {\r\n                        if (action.position === 'top') {\r\n                            return {\r\n                                ...match,\r\n                                firstPlayer: {...action.player}\r\n                            }\r\n                        } else {\r\n                            return {\r\n                                ...match,\r\n                                secondPlayer: {...action.player}\r\n                            }\r\n                        };\r\n                    }\r\n                    return match;\r\n                })\r\n            }\r\n        case ADD_SEMIFINALS_RESULT:\r\n            return {\r\n                ...state,\r\n                matchesFinals: state.matchesFinals.map(match => {\r\n                    if (action.position === 'top') {\r\n                        return {\r\n                            ...match,\r\n                            firstPlayer: { ...action.player }\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            ...match,\r\n                            secondPlayer: { ...action.player }\r\n                        }\r\n                    };\r\n                })\r\n            }\r\n        case FILL_QUARTERFINALS_SCORE:\r\n            return {\r\n                ...state,\r\n                matchesQuarterfinals: state.matchesQuarterfinals.map (match => {\r\n                    if(match.id === action.id) {\r\n                        return {\r\n                            ...match,\r\n                            firstPlayerScore: action.firstPlayerScore,\r\n                            secondPlayerScore: action.secondPlayerScore\r\n                        }\r\n                    }\r\n                    return match;\r\n                })\r\n            }\r\n        case FILL_SEMIFINALS_SCORE:\r\n            return {\r\n                ...state,\r\n                matchesSemifinals: state.matchesSemifinals.map(match => {\r\n                    if (match.id === action.id) {\r\n                        return {\r\n                            ...match,\r\n                            firstPlayerScore: action.firstPlayerScore,\r\n                            secondPlayerScore: action.secondPlayerScore\r\n                        }\r\n                    }\r\n                    return match;\r\n                })\r\n            }\r\n        case FILL_FINALS_SCORE:\r\n            return {\r\n                ...state,\r\n                isTableFormed: false,\r\n                matchesFinals: state.matchesFinals.map(match => {\r\n                    return {\r\n                        ...match,\r\n                        firstPlayerScore: action.firstPlayerScore,\r\n                        secondPlayerScore: action.secondPlayerScore\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_RATING:\r\n            return {\r\n                ...state,\r\n                ratingIncrement: state.ratingIncrement.map( player => {\r\n                    if (player.id === action.id1) {\r\n                        return {\r\n                            ...player,\r\n                            increment: action.firstPlayer\r\n                        }\r\n                    } else if (player.id === action.id2) {\r\n                        return {\r\n                            ...player,\r\n                            increment: action.secondPlayer\r\n                        }\r\n                    } else {\r\n                        return player\r\n                    }\r\n                })\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const formTable = (players, selectedIds) => (\r\n    { type: FORM_TABLE, players, selectedIds });\r\nexport const addQuarterfinalsResult = (id, player, position) => (\r\n    { type: ADD_QUARTERFINALS_RESULT, id, player, position });\r\nexport const addSemifinalsResult = (id, player, position) => (\r\n    { type: ADD_SEMIFINALS_RESULT, id, player, position });\r\nexport const addFinalsResult = (id, player, position) => (\r\n    { type: ADD_FINALS_RESULT, id, player, position });\r\nexport const fillQuarterfinalsScore = (id, firstPlayerScore, secondPlayerScore) => (\r\n    { type: FILL_QUARTERFINALS_SCORE, id, firstPlayerScore, secondPlayerScore });\r\nexport const fillSemifinalsScore = (id, firstPlayerScore, secondPlayerScore) => (\r\n    { type: FILL_SEMIFINALS_SCORE, id, firstPlayerScore, secondPlayerScore });\r\nexport const fillFinalsScore = (id, firstPlayerScore, secondPlayerScore) => (\r\n    { type: FILL_FINALS_SCORE, id, firstPlayerScore, secondPlayerScore });\r\nexport const changeRating = (id1, id2, firstPlayer, secondPlayer) => (\r\n    { type: CHANGE_RATING, id1, id2, firstPlayer, secondPlayer });\r\n\r\nexport default tableReducer;","import { createStore, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport playersReducer from './playersReducer';\nimport tableReducer from './tableReducer';\n\nconst CLEAR_FORM = 'tournament-table/formReducer/CLEAR_FORM';\n\nlet reducers = combineReducers({\n    players: playersReducer,\n    table: tableReducer,\n    form: formReducer.plugin({\n        addPlayer: (state, action) => {\n            switch (action.type) {\n                case CLEAR_FORM:\n                    return undefined;\n                default:\n                    return state;\n            }\n        },\n        matchResults: (state, action) => {\n            switch (action.type) {\n                case CLEAR_FORM:\n                    return undefined;\n                default:\n                    return state;\n            }\n        }\n    })\n});\n\nlet store = createStore(\n    reducers,\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport const clearForm = () => ({ type: CLEAR_FORM });\n\nexport default store;","import React from 'react';\r\n\r\nexport const Player = React.memo((props) => {\r\n    const {name, rating} = props.player;\r\n\r\n    return (\r\n        <div>\r\n            <span>{`${name} (${rating})`}</span>\r\n        </div>\r\n    )\r\n});","export const requiredField = (value) => {\r\n    if (!value) {\r\n        return 'Field is required';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const numberField = (value) => {\r\n    if (value && !value.match(/^\\d+$/)) {\r\n        return 'Value should be a number';\r\n    } else if (value && value.length > 4) {\r\n        return 'Maximum 4 digits';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const stringField30 = (value) => {\r\n    if (!value.match(/^[a-zA-Z]+( [a-zA-Z]+)*$/)) {\r\n        return 'Value should be a string';\r\n    } else if (value.length > 30) {\r\n        return 'Maximum 30 symbols';\r\n    }\r\n    return undefined;\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.scss';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    const classForError = hasError ? styles.error : \"\";\r\n\r\n    return (\r\n        <div className={ `${styles.formControl} ${classForError}` }>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const FormControlComponent = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><Form.Control {...input} {...restProps}/></FormControl>\r\n}","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport style from './AddPlayerForm.module.scss';\r\nimport { requiredField, numberField, stringField30 } from '../../../utils/validators/validators';\r\nimport { FormControlComponent } from '../../common/FormControls/FormsControls';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst AddPlayerForm = React.memo((props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.formContainer}>\r\n            <Field component={FormControlComponent} name={'name'} placeholder={\"Player's name\"}\r\n                validate={[requiredField, stringField30]} />\r\n            <Field component={FormControlComponent} name={'rating'} placeholder={\"Player's rating\"}\r\n                validate={[requiredField, numberField]} />\r\n            <div>\r\n                <Button variant='outline-success' type='submit'>Add</Button>\r\n                <Button variant='outline-danger' type='button'\r\n                    onClick={props.toggleAddPlayerForm}>Close</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n});\r\n\r\nconst AddPlayerReduxForm = reduxForm({ form: 'addPlayer' })(AddPlayerForm);\r\n\r\nexport const AddPlayerFormContainer = React.memo((props) => {\r\n    const addPlayer = (FormData) => {\r\n        const newPlayer = {\r\n            id: Math.random().toFixed(5),\r\n            name: FormData.name,\r\n            rating: +FormData.rating\r\n        };\r\n        props.addPlayer(newPlayer);\r\n        props.clearForm();\r\n        props.toggleAddPlayerForm();\r\n    }\r\n\r\n    return (\r\n        <AddPlayerReduxForm onSubmit={addPlayer} toggleAddPlayerForm={props.toggleAddPlayerForm} />\r\n    )\r\n});","import React from 'react';\r\nimport style from './Filter.module.scss';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport const Filter = React.memo((props) => {\r\n    return (\r\n        <div className={style.filterContainer}>\r\n            <Form.Control value={props.filterValue} onChange={props.changeFilter}\r\n                className={style.filter} type=\"text\" placeholder=\"Search by name\" />\r\n            <Button onClick={props.clearFilter} variant='danger' className={style.filterButton}>X</Button>\r\n        </div>\r\n    )\r\n});","import React, { useState, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addPlayer, removeAllPlayersFromSelection,\r\n    togglePlayerSelection, addPlayerToSelection, removePlayerFromSelection } from '../../redux/playersReducer';\r\nimport { formTable } from '../../redux/tableReducer';\r\nimport { clearForm } from '../../redux/store';\r\nimport style from './Players.module.scss';\r\nimport { Player } from './Player/Player';\r\nimport { AddPlayerFormContainer } from './AddPlayerForm/AddPlayerForm';\r\nimport { Filter } from '../common/Filter/Filter';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nconst Players = React.memo((props) => {\r\n    return (\r\n        <div className={style.players}>\r\n            {props.playersElements}\r\n        </div>\r\n    )\r\n});\r\n\r\nconst PlayersContainer = React.memo((props) => {\r\n    const [isFormDisplayed, toggleFormDisplay] = useState(false);\r\n    const [filterValue, changeFilterValue] = useState('');\r\n\r\n    const toggleAddPlayerForm = () => {\r\n        if (isFormDisplayed) {\r\n            toggleFormDisplay(false);\r\n        } else {\r\n            toggleFormDisplay(true);\r\n        }\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [tooltipText, changeTooltipText] = useState('');\r\n    const target = useRef(null);\r\n\r\n    useEffect( () => {\r\n\r\n    }, [show]);\r\n\r\n    const tooltip = () => {\r\n        const onEnter = () => {\r\n            setTimeout(() => {\r\n                setShow(false);\r\n            }, 2000);\r\n        }\r\n\r\n        return (\r\n            <Overlay target={target.current} show={show} placement=\"right\"\r\n                onEntered={onEnter}>\r\n                {props => (\r\n                    <Tooltip {...props}>\r\n                        { tooltipText }\r\n                    </Tooltip>\r\n                )}\r\n            </Overlay>\r\n        )\r\n    }\r\n\r\n    const togglePlayerSelection = (player) => {\r\n        if (player.selected) {\r\n            props.removePlayerFromSelection(player);\r\n            props.togglePlayerSelection(player.id);\r\n        } else if (props.selectedPlayers.length < 8) {\r\n            props.addPlayerToSelection(player);\r\n            props.togglePlayerSelection(player.id);\r\n        } else {\r\n            changeTooltipText('You can\\'t add more than 8 players');\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n    const filteredPlayers = props.players\r\n        .filter( player => player.name.toLowerCase().includes(filterValue, 0))\r\n        .sort( (player1, player2) => player1.rating < player2.rating ? 1 : -1);\r\n\r\n    const playersElements = filteredPlayers.map( player => {\r\n        const classForSelected = player.selected ? style.selected : '';\r\n\r\n        return (\r\n            <ListGroup.Item key={player.id} onClick={() => togglePlayerSelection(player)}\r\n                className={`${classForSelected} ${style.player}`} >\r\n                <Player player={player} />\r\n            </ListGroup.Item>\r\n        )\r\n    })\r\n\r\n    const changeFilter = (event) => {\r\n        changeFilterValue(event.currentTarget.value);\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        changeFilterValue('');\r\n    }\r\n\r\n    const formTable = () => {\r\n        if (props.isTableFormed) {\r\n            changeTooltipText('Table has already been formed!');\r\n            setShow(true);\r\n        } else {\r\n            if (props.selectedPlayers.length === 8) {\r\n                const playersForTable = props.selectedPlayers\r\n                    .map( player => player )\r\n                    .sort( (player1, player2) => {\r\n                        return player1.rating < player2.rating ? 1 : -1\r\n                    });\r\n\r\n                const selectedIds = [];\r\n                playersForTable.forEach( player => {\r\n                    selectedIds.push({id: player.id, increment: 0});\r\n                })\r\n\r\n                props.formTable(playersForTable, selectedIds);\r\n                props.removeAllPlayersFromSelection();\r\n            } else {\r\n                changeTooltipText('You should add exactly 8 players');\r\n                setShow(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.playersContainer}>\r\n            <h3 className={style.title}>Select players</h3>\r\n            <Filter filterValue={filterValue} changeFilter={changeFilter} clearFilter={clearFilter} />\r\n            <Players playersElements={playersElements}/>\r\n            { !isFormDisplayed \r\n                ? <>\r\n                    <Button variant='outline-success' onClick={toggleAddPlayerForm}>Add new player</Button>\r\n                    <Button variant='outline-success' ref={target} onClick={formTable}>Form a table</Button>\r\n                 </>\r\n                 : <AddPlayerFormContainer toggleAddPlayerForm={toggleAddPlayerForm}\r\n                        addPlayer={props.addPlayer} clearForm={props.clearForm} /> }\r\n            { tooltip() }\r\n        </div>\r\n    )\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        players: state.players.players,\r\n        selectedPlayers: state.players.selectedPlayers,\r\n        isTableFormed: state.table.isTableFormed\r\n    }\r\n}\r\n\r\nexport const ComposedPlayers = compose(\r\n    connect(mapStateToProps,\r\n        {togglePlayerSelection, addPlayerToSelection, removePlayerFromSelection,\r\n            addPlayer, formTable, removeAllPlayersFromSelection, clearForm}\r\n))(PlayersContainer);","import React, { useState, useRef } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport style from './MatchResults.module.scss';\r\nimport { numberField } from '../../../../utils/validators/validators';\r\nimport { FormControlComponent } from '../../../common/FormControls/FormsControls';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nconst MatchResults = React.memo((props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit} className={style.formContainer}>\r\n            <div>\r\n                <div className={style.player}>\r\n                    <Field component={FormControlComponent} name={'firstPlayerScore'} validate={[numberField]}\r\n                        className={style.score} placeholder={`${props.firstPlayer.name} score`} />\r\n                </div>\r\n                <div className={style.player}>\r\n                    <Field component={FormControlComponent} name={'secondPlayerScore'} validate={[numberField]}\r\n                        className={style.score} placeholder={`${props.secondPlayer.name} score`} />\r\n                </div>\r\n            </div>\r\n            <div className={style.buttons}>\r\n                <Button variant='outline-success' ref={props.target} type='submit'>✓</Button>\r\n                <Button variant='outline-danger' type='button' onClick={props.closeForm}>X</Button>\r\n                { props.tooltip() }\r\n            </div>\r\n\t\t</form>\r\n\t)\r\n});\r\n\r\nconst MatchResultsReduxForm = reduxForm({ form: 'matchResults' })(MatchResults);\r\n\r\nexport const MatchResultsContainer = React.memo((props) => {\r\n    const {id, firstPlayer, secondPlayer} = props.match;\r\n\r\n    const [show, setShow] = useState(false);\r\n    const target = useRef(null);\r\n\r\n    const tooltip = () => {\r\n        const onEnter = () => {\r\n            setTimeout(() => {\r\n                setShow(false);\r\n            }, 2000);\r\n        }\r\n\r\n        return (\r\n            <Overlay target={target.current} show={show} placement=\"right\"\r\n                onEntered={onEnter}>\r\n                {props => (\r\n                    <Tooltip {...props}>\r\n                        Score should be 3:2, 3:1 or 3:0\r\n                    </Tooltip>\r\n                )}\r\n            </Overlay>\r\n        )\r\n    }\r\n\r\n    const addResult = (formData) => {\r\n        const {firstPlayerScore = 0, secondPlayerScore = 0} = formData;\r\n\r\n        if (!(firstPlayerScore === '3' && secondPlayerScore < firstPlayerScore)\r\n            && !(secondPlayerScore === '3' && firstPlayerScore < secondPlayerScore)) {\r\n            return setShow(true);\r\n        }\r\n\r\n        const position = (id % 2 === 0) ? 'bottom' : 'top';\r\n        \r\n        let winner = null;\r\n        let firstPlayerIncrement = null;\r\n        let secondPlayerIncrement = null;\r\n\r\n        if (firstPlayerScore > secondPlayerScore) {\r\n            firstPlayerIncrement = Math.ceil((100 - firstPlayer.rating + secondPlayer.rating) / 10);\r\n            secondPlayerIncrement = Math.ceil((100 - firstPlayer.rating + secondPlayer.rating) / (-20));\r\n            winner = {\r\n                name: firstPlayer.name,\r\n                rating: firstPlayer.rating,\r\n                id: firstPlayer.id\r\n            }\r\n            props.changeRating(firstPlayer.id, secondPlayer.id, firstPlayerIncrement, secondPlayerIncrement);\r\n        } else {\r\n            secondPlayerIncrement = Math.ceil((100 - firstPlayer.rating + secondPlayer.rating) / 10);\r\n            firstPlayerIncrement = Math.ceil((100 - firstPlayer.rating + secondPlayer.rating) / (-20));\r\n            winner = {\r\n                name: secondPlayer.name,\r\n                rating: secondPlayer.rating,\r\n                id: secondPlayer.id\r\n            }\r\n            props.changeRating(secondPlayer.id, firstPlayer.id, secondPlayerIncrement, firstPlayerIncrement);\r\n        }\r\n\r\n        if (id <= 4) {\r\n            props.addQuarterfinalsResult(id, winner, position);\r\n            props.fillQuarterfinalsScore(id, firstPlayerScore, secondPlayerScore);\r\n        } else if (id === 5 || id === 6) {\r\n            props.addSemifinalsResult(id, winner, position);\r\n            props.fillSemifinalsScore(id, firstPlayerScore, secondPlayerScore);\r\n        } else if (id === 7) {\r\n            props.addFinalsResult(id, winner, position);\r\n            props.fillFinalsScore(id, firstPlayerScore, secondPlayerScore);\r\n            props.applyFinalRating(props.ratingIncrement);\r\n        }\r\n        \r\n        props.clearForm();\r\n        props.closeForm();\r\n    }\r\n\r\n    return (\r\n        <MatchResultsReduxForm onSubmit={addResult} closeForm={props.closeForm}\r\n            firstPlayer={firstPlayer} secondPlayer={secondPlayer}\r\n            target={target} tooltip={tooltip} />\r\n    )\r\n});","import React from 'react';\r\nimport style from './Match.module.scss';\r\nimport { MatchResultsContainer } from './MatchResults/MatchResults';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nexport const Match = React.memo((props) => {\r\n\tconst { firstPlayer, secondPlayer, firstPlayerScore, secondPlayerScore } = props.match;\r\n\r\n\tconst openForm = () => {\r\n        const needToOpen = !(firstPlayer.name === 'TBA' || secondPlayer.name === 'TBA');\r\n\t\tprops.openForm(props.match.id, needToOpen);\r\n\t}\r\n\r\n\tconst closeForm = () => {\r\n\t\tprops.closeForm();\r\n\t}\r\n    \r\n    return (\r\n        <div className={style.matchContainer} onClick={openForm}>\r\n            <div className={style.match}>\r\n                { props.showResultsForm && props.isFormOpen\r\n                    ? \r\n                        <ListGroup.Item>\r\n                            <MatchResultsContainer {...props} closeForm={closeForm} />\r\n                        </ListGroup.Item>\r\n                    :\r\n                        <>\r\n                            <ListGroup.Item className={style.player}>\r\n                                <div className={style.name}>{firstPlayer.name}</div>\r\n                                <div className={style.score}>{firstPlayerScore}</div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className={style.player}>\r\n                                <div className={style.name}>{secondPlayer.name}</div>\r\n                                <div className={style.score}>{secondPlayerScore}</div>\r\n                            </ListGroup.Item>\r\n                        </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n});","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport style from './Table.module.scss';\r\nimport { addQuarterfinalsResult, addSemifinalsResult, addFinalsResult,\r\n    fillQuarterfinalsScore, fillSemifinalsScore, fillFinalsScore, changeRating } from '../../redux/tableReducer';\r\nimport { applyFinalRating } from '../../redux/playersReducer';\r\nimport { clearForm } from '../../redux/store';\r\nimport { Match } from './Match/Match';\r\n\r\nconst Table = React.memo((props) => {\r\n\treturn (\r\n        <>\r\n            <h3 className={style.title}>Tournament table</h3>\r\n            <div className={style.tableContainer}>\r\n                <div className={style.matchContainer}>\r\n                    {props.matchesQuarterfinals}\r\n                </div>\r\n                <div className={style.matchContainer}>\r\n                    {props.matchesSemifinals}\r\n                </div>\r\n                <div className={style.matchContainer}>\r\n                    {props.matchesFinals}\r\n                </div>\r\n            </div>\r\n        </>\r\n\t);\r\n});\r\n\r\nconst TableContainer = (props) => {\r\n    const [showResultsForm, toggleResultForm] = useState(false);\r\n    const [formIsOpenForId, changeId] = useState(null);\r\n    \r\n\tconst openForm = (id, needToOpen) => {\r\n        if (props.isTableFormed && needToOpen) {\r\n            changeId(id);\r\n            if (!showResultsForm) {\r\n                toggleResultForm(true);\r\n            }\r\n        }\r\n\t}\r\n\r\n\tconst closeForm = () => {\r\n\t\ttoggleResultForm(false);\r\n\t}\r\n\r\n    const matches = (matches) => {\r\n        return matches.map( match => {\r\n            const isFormOpen = formIsOpenForId === match.id ? true : false;\r\n\r\n            return <Match key={match.id} match={match} {...props}\r\n            openForm={openForm} closeForm={closeForm} showResultsForm={showResultsForm}\r\n            isFormOpen={isFormOpen} />\r\n        })\r\n    }\r\n\r\n    const matchesQuarterfinals = matches(props.matchesQuarterfinals);\r\n    const matchesSemifinals = matches(props.matchesSemifinals);\r\n    const matchesFinals = matches(props.matchesFinals);\r\n\r\n    return <Table matchesQuarterfinals={matchesQuarterfinals}\r\n        matchesSemifinals={matchesSemifinals}\r\n        matchesFinals={matchesFinals} />\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matchesQuarterfinals: state.table.matchesQuarterfinals,\r\n        matchesSemifinals: state.table.matchesSemifinals,\r\n        matchesFinals: state.table.matchesFinals,\r\n        ratingIncrement: state.table.ratingIncrement,\r\n        isTableFormed: state.table.isTableFormed\r\n    }\r\n}\r\n\r\nexport const ComposedTable = compose(\r\n    connect(mapStateToProps,\r\n        {addQuarterfinalsResult, addSemifinalsResult, addFinalsResult,\r\n            fillQuarterfinalsScore, fillSemifinalsScore, fillFinalsScore,\r\n            clearForm, changeRating, applyFinalRating})\r\n)(TableContainer);","import React from 'react';\r\nimport style from './App.module.scss';\r\n// import routes from './routes';\r\n// import Navigation from './ui/Navigation/Navigation';\r\nimport { ComposedPlayers } from './ui/Players/Players';\r\nimport { ComposedTable } from './ui/Table/Table';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nexport const App = React.memo(() => {\r\n\treturn (\r\n\t\t<div className={style.app}>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg='4'><ComposedPlayers /></Col>\r\n                    <Col lg='8' className={style.table}><ComposedTable /></Col>\r\n                </Row>\r\n            </Container>\r\n\t\t</div>\r\n\t);\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\nwindow.store = store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nwindow.store = store;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"MatchResults_formContainer__1rZ8B\",\"buttons\":\"MatchResults_buttons__IJgsr\",\"player\":\"MatchResults_player__2WTOO\",\"score\":\"MatchResults_score__2z5P0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playersContainer\":\"Players_playersContainer__1HgTt\",\"title\":\"Players_title__1NbOH\",\"players\":\"Players_players__uf2XP\",\"player\":\"Players_player__2tslD\",\"selected\":\"Players_selected__TmDHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"Table_tableContainer__1Ri5w\",\"matchContainer\":\"Table_matchContainer__IASN7\",\"title\":\"Table_title__F9P2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2M1kd\",\"filter\":\"Filter_filter__1CE08\",\"filterButton\":\"Filter_filterButton__1aYh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__tR-Xx\",\"table\":\"App_table__13esp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__YNBGI\",\"error\":\"FormsControls_error__1HYwl\"};"],"sourceRoot":""}